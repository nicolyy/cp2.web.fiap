{
  "version": "2.1.0",
  "$schema": "http://json.schemastore.org/sarif-2.1.0-rtm.5",
  "runs": [
    {
      "tool": {
        "driver": {
          "name": "ESLint",
          "informationUri": "https://eslint.org",
          "rules": [
            {
              "id": "@typescript-eslint/no-explicit-any",
              "helpUri": "https://typescript-eslint.io/rules/no-explicit-any",
              "properties": {},
              "shortDescription": {
                "text": "Disallow the `any` type"
              }
            },
            {
              "id": "@typescript-eslint/no-unused-vars",
              "helpUri": "https://typescript-eslint.io/rules/no-unused-vars",
              "properties": {},
              "shortDescription": {
                "text": "Disallow unused variables"
              }
            },
            {
              "id": "no-self-assign",
              "helpUri": "https://eslint.org/docs/rules/no-self-assign",
              "properties": {},
              "shortDescription": {
                "text": "Disallow assignments where both sides are exactly the same"
              }
            },
            {
              "id": "@typescript-eslint/no-var-requires",
              "helpUri": "https://typescript-eslint.io/rules/no-var-requires",
              "properties": {},
              "shortDescription": {
                "text": "Disallow `require` statements except in import statements"
              }
            },
            {
              "id": "@typescript-eslint/no-use-before-define",
              "helpUri": "https://typescript-eslint.io/rules/no-use-before-define",
              "properties": {},
              "shortDescription": {
                "text": "Disallow the use of variables before they are defined"
              }
            },
            {
              "id": "@typescript-eslint/no-namespace",
              "helpUri": "https://typescript-eslint.io/rules/no-namespace",
              "properties": {},
              "shortDescription": {
                "text": "Disallow custom TypeScript modules and namespaces"
              }
            },
            {
              "id": "@typescript-eslint/ban-types",
              "helpUri": "https://typescript-eslint.io/rules/ban-types",
              "properties": {},
              "shortDescription": {
                "text": "Disallow certain types"
              }
            }
          ],
          "version": "8.24.0"
        }
      },
      "artifacts": [
        {
          "location": {
            "uri": "file:///home/runner/work/yaml-language-server/yaml-language-server/src/commands.ts"
          }
        },
        {
          "location": {
            "uri": "file:///home/runner/work/yaml-language-server/yaml-language-server/src/index.ts"
          }
        },
        {
          "location": {
            "uri": "file:///home/runner/work/yaml-language-server/yaml-language-server/src/languageserver/commandExecutor.ts"
          }
        },
        {
          "location": {
            "uri": "file:///home/runner/work/yaml-language-server/yaml-language-server/src/languageserver/handlers/languageHandlers.ts"
          }
        },
        {
          "location": {
            "uri": "file:///home/runner/work/yaml-language-server/yaml-language-server/src/languageserver/handlers/notificationHandlers.ts"
          }
        },
        {
          "location": {
            "uri": "file:///home/runner/work/yaml-language-server/yaml-language-server/src/languageserver/handlers/requestHandlers.ts"
          }
        },
        {
          "location": {
            "uri": "file:///home/runner/work/yaml-language-server/yaml-language-server/src/languageserver/handlers/schemaSelectionHandlers.ts"
          }
        },
        {
          "location": {
            "uri": "file:///home/runner/work/yaml-language-server/yaml-language-server/src/languageserver/handlers/settingsHandlers.ts"
          }
        },
        {
          "location": {
            "uri": "file:///home/runner/work/yaml-language-server/yaml-language-server/src/languageserver/handlers/validationHandlers.ts"
          }
        },
        {
          "location": {
            "uri": "file:///home/runner/work/yaml-language-server/yaml-language-server/src/languageserver/handlers/workspaceHandlers.ts"
          }
        },
        {
          "location": {
            "uri": "file:///home/runner/work/yaml-language-server/yaml-language-server/src/languageserver/telemetry.ts"
          }
        },
        {
          "location": {
            "uri": "file:///home/runner/work/yaml-language-server/yaml-language-server/src/languageservice/jsonASTTypes.ts"
          }
        },
        {
          "location": {
            "uri": "file:///home/runner/work/yaml-language-server/yaml-language-server/src/languageservice/jsonSchema.ts"
          }
        },
        {
          "location": {
            "uri": "file:///home/runner/work/yaml-language-server/yaml-language-server/src/languageservice/parser/ast-converter.ts"
          }
        },
        {
          "location": {
            "uri": "file:///home/runner/work/yaml-language-server/yaml-language-server/src/languageservice/parser/custom-tag-provider.ts"
          }
        },
        {
          "location": {
            "uri": "file:///home/runner/work/yaml-language-server/yaml-language-server/src/languageservice/parser/isKubernetes.ts"
          }
        },
        {
          "location": {
            "uri": "file:///home/runner/work/yaml-language-server/yaml-language-server/src/languageservice/parser/jsonParser07.ts"
          }
        },
        {
          "location": {
            "uri": "file:///home/runner/work/yaml-language-server/yaml-language-server/src/languageservice/parser/scalar-type.ts"
          }
        },
        {
          "location": {
            "uri": "file:///home/runner/work/yaml-language-server/yaml-language-server/src/languageservice/parser/yaml-documents.ts"
          }
        },
        {
          "location": {
            "uri": "file:///home/runner/work/yaml-language-server/yaml-language-server/src/languageservice/parser/yamlParser07.ts"
          }
        },
        {
          "location": {
            "uri": "file:///home/runner/work/yaml-language-server/yaml-language-server/src/languageservice/services/documentSymbols.ts"
          }
        },
        {
          "location": {
            "uri": "file:///home/runner/work/yaml-language-server/yaml-language-server/src/languageservice/services/modelineUtil.ts"
          }
        },
        {
          "location": {
            "uri": "file:///home/runner/work/yaml-language-server/yaml-language-server/src/languageservice/services/schemaRequestHandler.ts"
          }
        },
        {
          "location": {
            "uri": "file:///home/runner/work/yaml-language-server/yaml-language-server/src/languageservice/services/validation/types.ts"
          }
        },
        {
          "location": {
            "uri": "file:///home/runner/work/yaml-language-server/yaml-language-server/src/languageservice/services/validation/unused-anchors.ts"
          }
        },
        {
          "location": {
            "uri": "file:///home/runner/work/yaml-language-server/yaml-language-server/src/languageservice/services/validation/yaml-style.ts"
          }
        },
        {
          "location": {
            "uri": "file:///home/runner/work/yaml-language-server/yaml-language-server/src/languageservice/services/yamlCodeActions.ts"
          }
        },
        {
          "location": {
            "uri": "file:///home/runner/work/yaml-language-server/yaml-language-server/src/languageservice/services/yamlCodeLens.ts"
          }
        },
        {
          "location": {
            "uri": "file:///home/runner/work/yaml-language-server/yaml-language-server/src/languageservice/services/yamlCommands.ts"
          }
        },
        {
          "location": {
            "uri": "file:///home/runner/work/yaml-language-server/yaml-language-server/src/languageservice/services/yamlCompletion.ts"
          }
        },
        {
          "location": {
            "uri": "file:///home/runner/work/yaml-language-server/yaml-language-server/src/languageservice/services/yamlDefinition.ts"
          }
        },
        {
          "location": {
            "uri": "file:///home/runner/work/yaml-language-server/yaml-language-server/src/languageservice/services/yamlFolding.ts"
          }
        },
        {
          "location": {
            "uri": "file:///home/runner/work/yaml-language-server/yaml-language-server/src/languageservice/services/yamlFormatter.ts"
          }
        },
        {
          "location": {
            "uri": "file:///home/runner/work/yaml-language-server/yaml-language-server/src/languageservice/services/yamlHover.ts"
          }
        },
        {
          "location": {
            "uri": "file:///home/runner/work/yaml-language-server/yaml-language-server/src/languageservice/services/yamlLinks.ts"
          }
        },
        {
          "location": {
            "uri": "file:///home/runner/work/yaml-language-server/yaml-language-server/src/languageservice/services/yamlOnTypeFormatting.ts"
          }
        },
        {
          "location": {
            "uri": "file:///home/runner/work/yaml-language-server/yaml-language-server/src/languageservice/services/yamlSchemaService.ts"
          }
        },
        {
          "location": {
            "uri": "file:///home/runner/work/yaml-language-server/yaml-language-server/src/languageservice/services/yamlValidation.ts"
          }
        },
        {
          "location": {
            "uri": "file:///home/runner/work/yaml-language-server/yaml-language-server/src/languageservice/telemetry.ts"
          }
        },
        {
          "location": {
            "uri": "file:///home/runner/work/yaml-language-server/yaml-language-server/src/languageservice/utils/arrUtils.ts"
          }
        },
        {
          "location": {
            "uri": "file:///home/runner/work/yaml-language-server/yaml-language-server/src/languageservice/utils/astUtils.ts"
          }
        },
        {
          "location": {
            "uri": "file:///home/runner/work/yaml-language-server/yaml-language-server/src/languageservice/utils/charCode.ts"
          }
        },
        {
          "location": {
            "uri": "file:///home/runner/work/yaml-language-server/yaml-language-server/src/languageservice/utils/documentPositionCalculator.ts"
          }
        },
        {
          "location": {
            "uri": "file:///home/runner/work/yaml-language-server/yaml-language-server/src/languageservice/utils/flow-style-rewriter.ts"
          }
        },
        {
          "location": {
            "uri": "file:///home/runner/work/yaml-language-server/yaml-language-server/src/languageservice/utils/indentationGuesser.ts"
          }
        },
        {
          "location": {
            "uri": "file:///home/runner/work/yaml-language-server/yaml-language-server/src/languageservice/utils/json.ts"
          }
        },
        {
          "location": {
            "uri": "file:///home/runner/work/yaml-language-server/yaml-language-server/src/languageservice/utils/objects.ts"
          }
        },
        {
          "location": {
            "uri": "file:///home/runner/work/yaml-language-server/yaml-language-server/src/languageservice/utils/parseUtils.ts"
          }
        },
        {
          "location": {
            "uri": "file:///home/runner/work/yaml-language-server/yaml-language-server/src/languageservice/utils/paths.ts"
          }
        },
        {
          "location": {
            "uri": "file:///home/runner/work/yaml-language-server/yaml-language-server/src/languageservice/utils/schemaUrls.ts"
          }
        },
        {
          "location": {
            "uri": "file:///home/runner/work/yaml-language-server/yaml-language-server/src/languageservice/utils/schemaUtils.ts"
          }
        },
        {
          "location": {
            "uri": "file:///home/runner/work/yaml-language-server/yaml-language-server/src/languageservice/utils/strings.ts"
          }
        },
        {
          "location": {
            "uri": "file:///home/runner/work/yaml-language-server/yaml-language-server/src/languageservice/utils/textBuffer.ts"
          }
        },
        {
          "location": {
            "uri": "file:///home/runner/work/yaml-language-server/yaml-language-server/src/languageservice/yamlLanguageService.ts"
          }
        },
        {
          "location": {
            "uri": "file:///home/runner/work/yaml-language-server/yaml-language-server/src/languageservice/yamlTypes.ts"
          }
        },
        {
          "location": {
            "uri": "file:///home/runner/work/yaml-language-server/yaml-language-server/src/requestTypes.ts"
          }
        },
        {
          "location": {
            "uri": "file:///home/runner/work/yaml-language-server/yaml-language-server/src/server.ts"
          }
        },
        {
          "location": {
            "uri": "file:///home/runner/work/yaml-language-server/yaml-language-server/src/webworker/yamlServerMain.ts"
          }
        },
        {
          "location": {
            "uri": "file:///home/runner/work/yaml-language-server/yaml-language-server/src/yamlServerInit.ts"
          }
        },
        {
          "location": {
            "uri": "file:///home/runner/work/yaml-language-server/yaml-language-server/src/yamlSettings.ts"
          }
        },
        {
          "location": {
            "uri": "file:///home/runner/work/yaml-language-server/yaml-language-server/test/arrUtils.test.ts"
          }
        },
        {
          "location": {
            "uri": "file:///home/runner/work/yaml-language-server/yaml-language-server/test/astUtils.test.ts"
          }
        },
        {
          "location": {
            "uri": "file:///home/runner/work/yaml-language-server/yaml-language-server/test/autoCompletion.test.ts"
          }
        },
        {
          "location": {
            "uri": "file:///home/runner/work/yaml-language-server/yaml-language-server/test/autoCompletionFix.test.ts"
          }
        },
        {
          "location": {
            "uri": "file:///home/runner/work/yaml-language-server/yaml-language-server/test/code-action-schema.test.ts"
          }
        },
        {
          "location": {
            "uri": "file:///home/runner/work/yaml-language-server/yaml-language-server/test/customTags.test.ts"
          }
        },
        {
          "location": {
            "uri": "file:///home/runner/work/yaml-language-server/yaml-language-server/test/defaultSnippets.test.ts"
          }
        },
        {
          "location": {
            "uri": "file:///home/runner/work/yaml-language-server/yaml-language-server/test/documentPositionCalculator.test.ts"
          }
        },
        {
          "location": {
            "uri": "file:///home/runner/work/yaml-language-server/yaml-language-server/test/documentSymbols.test.ts"
          }
        },
        {
          "location": {
            "uri": "file:///home/runner/work/yaml-language-server/yaml-language-server/test/findLinks.test.ts"
          }
        },
        {
          "location": {
            "uri": "file:///home/runner/work/yaml-language-server/yaml-language-server/test/flow-style-rewriter.test.ts"
          }
        },
        {
          "location": {
            "uri": "file:///home/runner/work/yaml-language-server/yaml-language-server/test/formatter.test.ts"
          }
        },
        {
          "location": {
            "uri": "file:///home/runner/work/yaml-language-server/yaml-language-server/test/hover.test.ts"
          }
        },
        {
          "location": {
            "uri": "file:///home/runner/work/yaml-language-server/yaml-language-server/test/integration.test.ts"
          }
        },
        {
          "location": {
            "uri": "file:///home/runner/work/yaml-language-server/yaml-language-server/test/jsonParser.test.ts"
          }
        },
        {
          "location": {
            "uri": "file:///home/runner/work/yaml-language-server/yaml-language-server/test/multipleDocuments.test.ts"
          }
        },
        {
          "location": {
            "uri": "file:///home/runner/work/yaml-language-server/yaml-language-server/test/objects.test.ts"
          }
        },
        {
          "location": {
            "uri": "file:///home/runner/work/yaml-language-server/yaml-language-server/test/paths.test.ts"
          }
        },
        {
          "location": {
            "uri": "file:///home/runner/work/yaml-language-server/yaml-language-server/test/schema.test.ts"
          }
        },
        {
          "location": {
            "uri": "file:///home/runner/work/yaml-language-server/yaml-language-server/test/schemaRequestHandler.test.ts"
          }
        },
        {
          "location": {
            "uri": "file:///home/runner/work/yaml-language-server/yaml-language-server/test/schemaSelectionHandlers.test.ts"
          }
        },
        {
          "location": {
            "uri": "file:///home/runner/work/yaml-language-server/yaml-language-server/test/schemaValidation.test.ts"
          }
        },
        {
          "location": {
            "uri": "file:///home/runner/work/yaml-language-server/yaml-language-server/test/settingsHandlers.test.ts"
          }
        },
        {
          "location": {
            "uri": "file:///home/runner/work/yaml-language-server/yaml-language-server/test/strings.test.ts"
          }
        },
        {
          "location": {
            "uri": "file:///home/runner/work/yaml-language-server/yaml-language-server/test/telemetry.test.ts"
          }
        },
        {
          "location": {
            "uri": "file:///home/runner/work/yaml-language-server/yaml-language-server/test/textBuffer.test.ts"
          }
        },
        {
          "location": {
            "uri": "file:///home/runner/work/yaml-language-server/yaml-language-server/test/utils/errorMessages.ts"
          }
        },
        {
          "location": {
            "uri": "file:///home/runner/work/yaml-language-server/yaml-language-server/test/utils/serviceSetup.ts"
          }
        },
        {
          "location": {
            "uri": "file:///home/runner/work/yaml-language-server/yaml-language-server/test/utils/testHelper.ts"
          }
        },
        {
          "location": {
            "uri": "file:///home/runner/work/yaml-language-server/yaml-language-server/test/utils/testsTypes.ts"
          }
        },
        {
          "location": {
            "uri": "file:///home/runner/work/yaml-language-server/yaml-language-server/test/utils/verifyError.ts"
          }
        },
        {
          "location": {
            "uri": "file:///home/runner/work/yaml-language-server/yaml-language-server/test/yaml-documents.test.ts"
          }
        },
        {
          "location": {
            "uri": "file:///home/runner/work/yaml-language-server/yaml-language-server/test/yamlCodeActions.test.ts"
          }
        },
        {
          "location": {
            "uri": "file:///home/runner/work/yaml-language-server/yaml-language-server/test/yamlCodeLens.test.ts"
          }
        },
        {
          "location": {
            "uri": "file:///home/runner/work/yaml-language-server/yaml-language-server/test/yamlCommands.test.ts"
          }
        },
        {
          "location": {
            "uri": "file:///home/runner/work/yaml-language-server/yaml-language-server/test/yamlDefinition.test.ts"
          }
        },
        {
          "location": {
            "uri": "file:///home/runner/work/yaml-language-server/yaml-language-server/test/yamlFolding.test.ts"
          }
        },
        {
          "location": {
            "uri": "file:///home/runner/work/yaml-language-server/yaml-language-server/test/yamlOnTypeFormatting.test.ts"
          }
        },
        {
          "location": {
            "uri": "file:///home/runner/work/yaml-language-server/yaml-language-server/test/yamlParser.test.ts"
          }
        },
        {
          "location": {
            "uri": "file:///home/runner/work/yaml-language-server/yaml-language-server/test/yamlSchema.test.ts"
          }
        },
        {
          "location": {
            "uri": "file:///home/runner/work/yaml-language-server/yaml-language-server/test/yamlSchemaService.test.ts"
          }
        },
        {
          "location": {
            "uri": "file:///home/runner/work/yaml-language-server/yaml-language-server/test/yamlValidation.test.ts"
          }
        }
      ],
      "results": [
        {
          "level": "warning",
          "message": {
            "text": "Unexpected any. Specify a different type."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///home/runner/work/yaml-language-server/yaml-language-server/src/languageserver/handlers/settingsHandlers.ts",
                  "index": 7
                },
                "region": {
                  "startLine": 204,
                  "startColumn": 91,
                  "endLine": 204,
                  "endColumn": 94
                }
              }
            }
          ],
          "ruleId": "@typescript-eslint/no-explicit-any",
          "ruleIndex": 0,
          "suppressions": [
            {
              "kind": "inSource",
              "justification": ""
            }
          ]
        },
        {
          "level": "warning",
          "message": {
            "text": "Unexpected any. Specify a different type."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///home/runner/work/yaml-language-server/yaml-language-server/src/languageservice/jsonSchema.ts",
                  "index": 12
                },
                "region": {
                  "startLine": 21,
                  "startColumn": 13,
                  "endLine": 21,
                  "endColumn": 16
                }
              }
            }
          ],
          "ruleId": "@typescript-eslint/no-explicit-any",
          "ruleIndex": 0,
          "suppressions": [
            {
              "kind": "inSource",
              "justification": ""
            }
          ]
        },
        {
          "level": "warning",
          "message": {
            "text": "Unexpected any. Specify a different type."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///home/runner/work/yaml-language-server/yaml-language-server/src/languageservice/jsonSchema.ts",
                  "index": 12
                },
                "region": {
                  "startLine": 51,
                  "startColumn": 10,
                  "endLine": 51,
                  "endColumn": 13
                }
              }
            }
          ],
          "ruleId": "@typescript-eslint/no-explicit-any",
          "ruleIndex": 0,
          "suppressions": [
            {
              "kind": "inSource",
              "justification": ""
            }
          ]
        },
        {
          "level": "warning",
          "message": {
            "text": "Unexpected any. Specify a different type."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///home/runner/work/yaml-language-server/yaml-language-server/src/languageservice/jsonSchema.ts",
                  "index": 12
                },
                "region": {
                  "startLine": 56,
                  "startColumn": 11,
                  "endLine": 56,
                  "endColumn": 14
                }
              }
            }
          ],
          "ruleId": "@typescript-eslint/no-explicit-any",
          "ruleIndex": 0,
          "suppressions": [
            {
              "kind": "inSource",
              "justification": ""
            }
          ]
        },
        {
          "level": "warning",
          "message": {
            "text": "Unexpected any. Specify a different type."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///home/runner/work/yaml-language-server/yaml-language-server/src/languageservice/jsonSchema.ts",
                  "index": 12
                },
                "region": {
                  "startLine": 60,
                  "startColumn": 14,
                  "endLine": 60,
                  "endColumn": 17
                }
              }
            }
          ],
          "ruleId": "@typescript-eslint/no-explicit-any",
          "ruleIndex": 0,
          "suppressions": [
            {
              "kind": "inSource",
              "justification": ""
            }
          ]
        },
        {
          "level": "warning",
          "message": {
            "text": "Unexpected any. Specify a different type."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///home/runner/work/yaml-language-server/yaml-language-server/src/languageservice/jsonSchema.ts",
                  "index": 12
                },
                "region": {
                  "startLine": 78,
                  "startColumn": 12,
                  "endLine": 78,
                  "endColumn": 15
                }
              }
            }
          ],
          "ruleId": "@typescript-eslint/no-explicit-any",
          "ruleIndex": 0,
          "suppressions": [
            {
              "kind": "inSource",
              "justification": ""
            }
          ]
        },
        {
          "level": "warning",
          "message": {
            "text": "Unexpected any. Specify a different type."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///home/runner/work/yaml-language-server/yaml-language-server/src/languageservice/parser/jsonParser07.ts",
                  "index": 16
                },
                "region": {
                  "startLine": 299,
                  "startColumn": 18,
                  "endLine": 299,
                  "endColumn": 21
                }
              }
            }
          ],
          "ruleId": "@typescript-eslint/no-explicit-any",
          "ruleIndex": 0,
          "suppressions": [
            {
              "kind": "inSource",
              "justification": ""
            }
          ]
        },
        {
          "level": "warning",
          "message": {
            "text": "'schema' is defined but never used."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///home/runner/work/yaml-language-server/yaml-language-server/src/languageservice/parser/jsonParser07.ts",
                  "index": 16
                },
                "region": {
                  "startLine": 303,
                  "startColumn": 7,
                  "endLine": 303,
                  "endColumn": 32
                }
              }
            }
          ],
          "ruleId": "@typescript-eslint/no-unused-vars",
          "ruleIndex": 1,
          "suppressions": [
            {
              "kind": "inSource",
              "justification": ""
            }
          ]
        },
        {
          "level": "warning",
          "message": {
            "text": "'other' is defined but never used."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///home/runner/work/yaml-language-server/yaml-language-server/src/languageservice/parser/jsonParser07.ts",
                  "index": 16
                },
                "region": {
                  "startLine": 307,
                  "startColumn": 9,
                  "endLine": 307,
                  "endColumn": 32
                }
              }
            }
          ],
          "ruleId": "@typescript-eslint/no-unused-vars",
          "ruleIndex": 1,
          "suppressions": [
            {
              "kind": "inSource",
              "justification": ""
            }
          ]
        },
        {
          "level": "warning",
          "message": {
            "text": "'node' is defined but never used."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///home/runner/work/yaml-language-server/yaml-language-server/src/languageservice/parser/jsonParser07.ts",
                  "index": 16
                },
                "region": {
                  "startLine": 311,
                  "startColumn": 11,
                  "endLine": 311,
                  "endColumn": 24
                }
              }
            }
          ],
          "ruleId": "@typescript-eslint/no-unused-vars",
          "ruleIndex": 1,
          "suppressions": [
            {
              "kind": "inSource",
              "justification": ""
            }
          ]
        },
        {
          "level": "warning",
          "message": {
            "text": "Unexpected any. Specify a different type."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///home/runner/work/yaml-language-server/yaml-language-server/src/languageservice/parser/jsonParser07.ts",
                  "index": 16
                },
                "region": {
                  "startLine": 329,
                  "startColumn": 22,
                  "endLine": 329,
                  "endColumn": 25
                }
              }
            }
          ],
          "ruleId": "@typescript-eslint/no-explicit-any",
          "ruleIndex": 0,
          "suppressions": [
            {
              "kind": "inSource",
              "justification": ""
            }
          ]
        },
        {
          "level": "warning",
          "message": {
            "text": "Unexpected any. Specify a different type."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///home/runner/work/yaml-language-server/yaml-language-server/src/languageservice/parser/jsonParser07.ts",
                  "index": 16
                },
                "region": {
                  "startLine": 473,
                  "startColumn": 46,
                  "endLine": 473,
                  "endColumn": 49
                }
              }
            }
          ],
          "ruleId": "@typescript-eslint/no-explicit-any",
          "ruleIndex": 0,
          "suppressions": [
            {
              "kind": "inSource",
              "justification": ""
            }
          ]
        },
        {
          "level": "warning",
          "message": {
            "text": "Unexpected any. Specify a different type."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///home/runner/work/yaml-language-server/yaml-language-server/src/languageservice/parser/jsonParser07.ts",
                  "index": 16
                },
                "region": {
                  "startLine": 634,
                  "startColumn": 4,
                  "endLine": 634,
                  "endColumn": 7
                }
              }
            }
          ],
          "ruleId": "@typescript-eslint/no-explicit-any",
          "ruleIndex": 0,
          "suppressions": [
            {
              "kind": "inSource",
              "justification": ""
            }
          ]
        },
        {
          "level": "warning",
          "message": {
            "text": "Unexpected any. Specify a different type."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///home/runner/work/yaml-language-server/yaml-language-server/src/languageservice/parser/jsonParser07.ts",
                  "index": 16
                },
                "region": {
                  "startLine": 1100,
                  "startColumn": 38,
                  "endLine": 1100,
                  "endColumn": 41
                }
              }
            }
          ],
          "ruleId": "@typescript-eslint/no-explicit-any",
          "ruleIndex": 0,
          "suppressions": [
            {
              "kind": "inSource",
              "justification": ""
            }
          ]
        },
        {
          "level": "warning",
          "message": {
            "text": "Unexpected any. Specify a different type."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///home/runner/work/yaml-language-server/yaml-language-server/src/languageservice/parser/jsonParser07.ts",
                  "index": 16
                },
                "region": {
                  "startLine": 1339,
                  "startColumn": 28,
                  "endLine": 1339,
                  "endColumn": 31
                }
              }
            }
          ],
          "ruleId": "@typescript-eslint/no-explicit-any",
          "ruleIndex": 0,
          "suppressions": [
            {
              "kind": "inSource",
              "justification": ""
            }
          ]
        },
        {
          "level": "warning",
          "message": {
            "text": "Unexpected any. Specify a different type."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///home/runner/work/yaml-language-server/yaml-language-server/src/languageservice/parser/jsonParser07.ts",
                  "index": 16
                },
                "region": {
                  "startLine": 1460,
                  "startColumn": 98,
                  "endLine": 1460,
                  "endColumn": 101
                }
              }
            }
          ],
          "ruleId": "@typescript-eslint/no-explicit-any",
          "ruleIndex": 0,
          "suppressions": [
            {
              "kind": "inSource",
              "justification": ""
            }
          ]
        },
        {
          "level": "warning",
          "message": {
            "text": "Unexpected any. Specify a different type."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///home/runner/work/yaml-language-server/yaml-language-server/src/languageservice/services/documentSymbols.ts",
                  "index": 20
                },
                "region": {
                  "startLine": 26,
                  "startColumn": 55,
                  "endLine": 26,
                  "endColumn": 58
                }
              }
            }
          ],
          "ruleId": "@typescript-eslint/no-explicit-any",
          "ruleIndex": 0,
          "suppressions": [
            {
              "kind": "inSource",
              "justification": ""
            }
          ]
        },
        {
          "level": "error",
          "message": {
            "text": "'currentDoc.internalDocument' is assigned to itself."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///home/runner/work/yaml-language-server/yaml-language-server/src/languageservice/services/yamlCompletion.ts",
                  "index": 29
                },
                "region": {
                  "startLine": 344,
                  "startColumn": 41,
                  "endLine": 344,
                  "endColumn": 68
                }
              }
            }
          ],
          "ruleId": "no-self-assign",
          "ruleIndex": 2,
          "suppressions": [
            {
              "kind": "inSource",
              "justification": ""
            }
          ]
        },
        {
          "level": "error",
          "message": {
            "text": "'currentDoc.internalDocument' is assigned to itself."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///home/runner/work/yaml-language-server/yaml-language-server/src/languageservice/services/yamlCompletion.ts",
                  "index": 29
                },
                "region": {
                  "startLine": 371,
                  "startColumn": 57,
                  "endLine": 371,
                  "endColumn": 84
                }
              }
            }
          ],
          "ruleId": "no-self-assign",
          "ruleIndex": 2,
          "suppressions": [
            {
              "kind": "inSource",
              "justification": ""
            }
          ]
        },
        {
          "level": "error",
          "message": {
            "text": "'currentDoc.internalDocument' is assigned to itself."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///home/runner/work/yaml-language-server/yaml-language-server/src/languageservice/services/yamlCompletion.ts",
                  "index": 29
                },
                "region": {
                  "startLine": 376,
                  "startColumn": 55,
                  "endLine": 376,
                  "endColumn": 82
                }
              }
            }
          ],
          "ruleId": "no-self-assign",
          "ruleIndex": 2,
          "suppressions": [
            {
              "kind": "inSource",
              "justification": ""
            }
          ]
        },
        {
          "level": "error",
          "message": {
            "text": "'currentDoc.internalDocument' is assigned to itself."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///home/runner/work/yaml-language-server/yaml-language-server/src/languageservice/services/yamlCompletion.ts",
                  "index": 29
                },
                "region": {
                  "startLine": 380,
                  "startColumn": 55,
                  "endLine": 380,
                  "endColumn": 82
                }
              }
            }
          ],
          "ruleId": "no-self-assign",
          "ruleIndex": 2,
          "suppressions": [
            {
              "kind": "inSource",
              "justification": ""
            }
          ]
        },
        {
          "level": "error",
          "message": {
            "text": "'currentDoc.internalDocument' is assigned to itself."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///home/runner/work/yaml-language-server/yaml-language-server/src/languageservice/services/yamlCompletion.ts",
                  "index": 29
                },
                "region": {
                  "startLine": 404,
                  "startColumn": 51,
                  "endLine": 404,
                  "endColumn": 78
                }
              }
            }
          ],
          "ruleId": "no-self-assign",
          "ruleIndex": 2,
          "suppressions": [
            {
              "kind": "inSource",
              "justification": ""
            }
          ]
        },
        {
          "level": "error",
          "message": {
            "text": "'currentDoc.internalDocument' is assigned to itself."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///home/runner/work/yaml-language-server/yaml-language-server/src/languageservice/services/yamlCompletion.ts",
                  "index": 29
                },
                "region": {
                  "startLine": 428,
                  "startColumn": 59,
                  "endLine": 428,
                  "endColumn": 86
                }
              }
            }
          ],
          "ruleId": "no-self-assign",
          "ruleIndex": 2,
          "suppressions": [
            {
              "kind": "inSource",
              "justification": ""
            }
          ]
        },
        {
          "level": "error",
          "message": {
            "text": "'currentDoc.internalDocument' is assigned to itself."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///home/runner/work/yaml-language-server/yaml-language-server/src/languageservice/services/yamlCompletion.ts",
                  "index": 29
                },
                "region": {
                  "startLine": 432,
                  "startColumn": 59,
                  "endLine": 432,
                  "endColumn": 86
                }
              }
            }
          ],
          "ruleId": "no-self-assign",
          "ruleIndex": 2,
          "suppressions": [
            {
              "kind": "inSource",
              "justification": ""
            }
          ]
        },
        {
          "level": "error",
          "message": {
            "text": "'currentDoc.internalDocument' is assigned to itself."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///home/runner/work/yaml-language-server/yaml-language-server/src/languageservice/services/yamlCompletion.ts",
                  "index": 29
                },
                "region": {
                  "startLine": 450,
                  "startColumn": 51,
                  "endLine": 450,
                  "endColumn": 78
                }
              }
            }
          ],
          "ruleId": "no-self-assign",
          "ruleIndex": 2,
          "suppressions": [
            {
              "kind": "inSource",
              "justification": ""
            }
          ]
        },
        {
          "level": "error",
          "message": {
            "text": "'currentDoc.internalDocument' is assigned to itself."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///home/runner/work/yaml-language-server/yaml-language-server/src/languageservice/services/yamlCompletion.ts",
                  "index": 29
                },
                "region": {
                  "startLine": 457,
                  "startColumn": 51,
                  "endLine": 457,
                  "endColumn": 78
                }
              }
            }
          ],
          "ruleId": "no-self-assign",
          "ruleIndex": 2,
          "suppressions": [
            {
              "kind": "inSource",
              "justification": ""
            }
          ]
        },
        {
          "level": "error",
          "message": {
            "text": "'currentDoc.internalDocument' is assigned to itself."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///home/runner/work/yaml-language-server/yaml-language-server/src/languageservice/services/yamlCompletion.ts",
                  "index": 29
                },
                "region": {
                  "startLine": 476,
                  "startColumn": 43,
                  "endLine": 476,
                  "endColumn": 70
                }
              }
            }
          ],
          "ruleId": "no-self-assign",
          "ruleIndex": 2,
          "suppressions": [
            {
              "kind": "inSource",
              "justification": ""
            }
          ]
        },
        {
          "level": "error",
          "message": {
            "text": "'currentDoc.internalDocument' is assigned to itself."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///home/runner/work/yaml-language-server/yaml-language-server/src/languageservice/services/yamlCompletion.ts",
                  "index": 29
                },
                "region": {
                  "startLine": 490,
                  "startColumn": 45,
                  "endLine": 490,
                  "endColumn": 72
                }
              }
            }
          ],
          "ruleId": "no-self-assign",
          "ruleIndex": 2,
          "suppressions": [
            {
              "kind": "inSource",
              "justification": ""
            }
          ]
        },
        {
          "level": "warning",
          "message": {
            "text": "Unexpected any. Specify a different type."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///home/runner/work/yaml-language-server/yaml-language-server/src/languageservice/services/yamlCompletion.ts",
                  "index": 29
                },
                "region": {
                  "startLine": 1189,
                  "startColumn": 41,
                  "endLine": 1189,
                  "endColumn": 44
                }
              }
            }
          ],
          "ruleId": "@typescript-eslint/no-explicit-any",
          "ruleIndex": 0,
          "suppressions": [
            {
              "kind": "inSource",
              "justification": ""
            }
          ]
        },
        {
          "level": "warning",
          "message": {
            "text": "Unexpected any. Specify a different type."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///home/runner/work/yaml-language-server/yaml-language-server/src/languageservice/services/yamlCompletion.ts",
                  "index": 29
                },
                "region": {
                  "startLine": 1227,
                  "startColumn": 47,
                  "endLine": 1227,
                  "endColumn": 50
                }
              }
            }
          ],
          "ruleId": "@typescript-eslint/no-explicit-any",
          "ruleIndex": 0,
          "suppressions": [
            {
              "kind": "inSource",
              "justification": ""
            }
          ]
        },
        {
          "level": "warning",
          "message": {
            "text": "Unexpected any. Specify a different type."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///home/runner/work/yaml-language-server/yaml-language-server/src/languageservice/services/yamlCompletion.ts",
                  "index": 29
                },
                "region": {
                  "startLine": 1255,
                  "startColumn": 40,
                  "endLine": 1255,
                  "endColumn": 43
                }
              }
            }
          ],
          "ruleId": "@typescript-eslint/no-explicit-any",
          "ruleIndex": 0,
          "suppressions": [
            {
              "kind": "inSource",
              "justification": ""
            }
          ]
        },
        {
          "level": "warning",
          "message": {
            "text": "Unexpected any. Specify a different type."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///home/runner/work/yaml-language-server/yaml-language-server/src/languageservice/services/yamlCompletion.ts",
                  "index": 29
                },
                "region": {
                  "startLine": 1516,
                  "startColumn": 47,
                  "endLine": 1516,
                  "endColumn": 50
                }
              }
            }
          ],
          "ruleId": "@typescript-eslint/no-explicit-any",
          "ruleIndex": 0,
          "suppressions": [
            {
              "kind": "inSource",
              "justification": ""
            }
          ]
        },
        {
          "level": "warning",
          "message": {
            "text": "Unexpected any. Specify a different type."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///home/runner/work/yaml-language-server/yaml-language-server/src/languageservice/services/yamlCompletion.ts",
                  "index": 29
                },
                "region": {
                  "startLine": 1518,
                  "startColumn": 30,
                  "endLine": 1518,
                  "endColumn": 33
                }
              }
            }
          ],
          "ruleId": "@typescript-eslint/no-explicit-any",
          "ruleIndex": 0,
          "suppressions": [
            {
              "kind": "inSource",
              "justification": ""
            }
          ]
        },
        {
          "level": "warning",
          "message": {
            "text": "Unexpected any. Specify a different type."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///home/runner/work/yaml-language-server/yaml-language-server/src/languageservice/services/yamlCompletion.ts",
                  "index": 29
                },
                "region": {
                  "startLine": 1518,
                  "startColumn": 45,
                  "endLine": 1518,
                  "endColumn": 48
                }
              }
            }
          ],
          "ruleId": "@typescript-eslint/no-explicit-any",
          "ruleIndex": 0,
          "suppressions": [
            {
              "kind": "inSource",
              "justification": ""
            }
          ]
        },
        {
          "level": "warning",
          "message": {
            "text": "Unexpected any. Specify a different type."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///home/runner/work/yaml-language-server/yaml-language-server/src/languageservice/services/yamlCompletion.ts",
                  "index": 29
                },
                "region": {
                  "startLine": 1553,
                  "startColumn": 42,
                  "endLine": 1553,
                  "endColumn": 45
                }
              }
            }
          ],
          "ruleId": "@typescript-eslint/no-explicit-any",
          "ruleIndex": 0,
          "suppressions": [
            {
              "kind": "inSource",
              "justification": ""
            }
          ]
        },
        {
          "level": "warning",
          "message": {
            "text": "Unexpected any. Specify a different type."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///home/runner/work/yaml-language-server/yaml-language-server/src/languageservice/services/yamlCompletion.ts",
                  "index": 29
                },
                "region": {
                  "startLine": 1591,
                  "startColumn": 35,
                  "endLine": 1591,
                  "endColumn": 38
                }
              }
            }
          ],
          "ruleId": "@typescript-eslint/no-explicit-any",
          "ruleIndex": 0,
          "suppressions": [
            {
              "kind": "inSource",
              "justification": ""
            }
          ]
        },
        {
          "level": "warning",
          "message": {
            "text": "Unexpected any. Specify a different type."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///home/runner/work/yaml-language-server/yaml-language-server/src/languageservice/services/yamlCompletion.ts",
                  "index": 29
                },
                "region": {
                  "startLine": 1594,
                  "startColumn": 22,
                  "endLine": 1594,
                  "endColumn": 25
                }
              }
            }
          ],
          "ruleId": "@typescript-eslint/no-explicit-any",
          "ruleIndex": 0,
          "suppressions": [
            {
              "kind": "inSource",
              "justification": ""
            }
          ]
        },
        {
          "level": "error",
          "message": {
            "text": "Require statement not part of import statement."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///home/runner/work/yaml-language-server/yaml-language-server/src/languageservice/services/yamlSchemaService.ts",
                  "index": 36
                },
                "region": {
                  "startLine": 40,
                  "startColumn": 22,
                  "endLine": 40,
                  "endColumn": 72
                }
              }
            }
          ],
          "ruleId": "@typescript-eslint/no-var-requires",
          "ruleIndex": 3,
          "suppressions": [
            {
              "kind": "inSource",
              "justification": ""
            }
          ]
        },
        {
          "level": "warning",
          "message": {
            "text": "Unexpected any. Specify a different type."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///home/runner/work/yaml-language-server/yaml-language-server/src/languageservice/services/yamlSchemaService.ts",
                  "index": 36
                },
                "region": {
                  "startLine": 57,
                  "startColumn": 12,
                  "endLine": 57,
                  "endColumn": 15
                }
              }
            }
          ],
          "ruleId": "@typescript-eslint/no-explicit-any",
          "ruleIndex": 0,
          "suppressions": [
            {
              "kind": "inSource",
              "justification": ""
            }
          ]
        },
        {
          "level": "warning",
          "message": {
            "text": "Unexpected any. Specify a different type."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///home/runner/work/yaml-language-server/yaml-language-server/src/languageservice/services/yamlSchemaService.ts",
                  "index": 36
                },
                "region": {
                  "startLine": 106,
                  "startColumn": 16,
                  "endLine": 106,
                  "endColumn": 19
                }
              }
            }
          ],
          "ruleId": "@typescript-eslint/no-explicit-any",
          "ruleIndex": 0,
          "suppressions": [
            {
              "kind": "inSource",
              "justification": ""
            }
          ]
        },
        {
          "level": "warning",
          "message": {
            "text": "Unexpected any. Specify a different type."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///home/runner/work/yaml-language-server/yaml-language-server/src/languageservice/services/yamlSchemaService.ts",
                  "index": 36
                },
                "region": {
                  "startLine": 181,
                  "startColumn": 20,
                  "endLine": 181,
                  "endColumn": 23
                }
              }
            }
          ],
          "ruleId": "@typescript-eslint/no-explicit-any",
          "ruleIndex": 0,
          "suppressions": [
            {
              "kind": "inSource",
              "justification": ""
            }
          ]
        },
        {
          "level": "warning",
          "message": {
            "text": "Unexpected any. Specify a different type."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///home/runner/work/yaml-language-server/yaml-language-server/src/languageservice/services/yamlSchemaService.ts",
                  "index": 36
                },
                "region": {
                  "startLine": 212,
                  "startColumn": 16,
                  "endLine": 212,
                  "endColumn": 19
                }
              }
            }
          ],
          "ruleId": "@typescript-eslint/no-explicit-any",
          "ruleIndex": 0,
          "suppressions": [
            {
              "kind": "inSource",
              "justification": ""
            }
          ]
        },
        {
          "level": "error",
          "message": {
            "text": "'resolveRefs' was used before it was defined."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///home/runner/work/yaml-language-server/yaml-language-server/src/languageservice/services/yamlSchemaService.ts",
                  "index": 36
                },
                "region": {
                  "startLine": 229,
                  "startColumn": 16,
                  "endLine": 229,
                  "endColumn": 27
                }
              }
            }
          ],
          "ruleId": "@typescript-eslint/no-use-before-define",
          "ruleIndex": 4,
          "suppressions": [
            {
              "kind": "inSource",
              "justification": ""
            }
          ]
        },
        {
          "level": "warning",
          "message": {
            "text": "Unexpected any. Specify a different type."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///home/runner/work/yaml-language-server/yaml-language-server/src/languageservice/services/yamlSchemaService.ts",
                  "index": 36
                },
                "region": {
                  "startLine": 239,
                  "startColumn": 16,
                  "endLine": 239,
                  "endColumn": 19
                }
              }
            }
          ],
          "ruleId": "@typescript-eslint/no-explicit-any",
          "ruleIndex": 0,
          "suppressions": [
            {
              "kind": "inSource",
              "justification": ""
            }
          ]
        },
        {
          "level": "warning",
          "message": {
            "text": "Unexpected any. Specify a different type."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///home/runner/work/yaml-language-server/yaml-language-server/src/languageservice/services/yamlSchemaService.ts",
                  "index": 36
                },
                "region": {
                  "startLine": 248,
                  "startColumn": 35,
                  "endLine": 248,
                  "endColumn": 38
                }
              }
            }
          ],
          "ruleId": "@typescript-eslint/no-explicit-any",
          "ruleIndex": 0,
          "suppressions": [
            {
              "kind": "inSource",
              "justification": ""
            }
          ]
        },
        {
          "level": "warning",
          "message": {
            "text": "Unexpected any. Specify a different type."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///home/runner/work/yaml-language-server/yaml-language-server/src/languageservice/services/yamlSchemaService.ts",
                  "index": 36
                },
                "region": {
                  "startLine": 393,
                  "startColumn": 31,
                  "endLine": 393,
                  "endColumn": 34
                }
              }
            }
          ],
          "ruleId": "@typescript-eslint/no-explicit-any",
          "ruleIndex": 0,
          "suppressions": [
            {
              "kind": "inSource",
              "justification": ""
            }
          ]
        },
        {
          "level": "warning",
          "message": {
            "text": "Unexpected any. Specify a different type."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///home/runner/work/yaml-language-server/yaml-language-server/src/languageservice/services/yamlSchemaService.ts",
                  "index": 36
                },
                "region": {
                  "startLine": 613,
                  "startColumn": 31,
                  "endLine": 613,
                  "endColumn": 34
                }
              }
            }
          ],
          "ruleId": "@typescript-eslint/no-explicit-any",
          "ruleIndex": 0,
          "suppressions": [
            {
              "kind": "inSource",
              "justification": ""
            }
          ]
        },
        {
          "level": "warning",
          "message": {
            "text": "Unexpected any. Specify a different type."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///home/runner/work/yaml-language-server/yaml-language-server/src/languageservice/services/yamlSchemaService.ts",
                  "index": 36
                },
                "region": {
                  "startLine": 613,
                  "startColumn": 43,
                  "endLine": 613,
                  "endColumn": 46
                }
              }
            }
          ],
          "ruleId": "@typescript-eslint/no-explicit-any",
          "ruleIndex": 0,
          "suppressions": [
            {
              "kind": "inSource",
              "justification": ""
            }
          ]
        },
        {
          "level": "warning",
          "message": {
            "text": "Unexpected any. Specify a different type."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///home/runner/work/yaml-language-server/yaml-language-server/src/languageservice/services/yamlSchemaService.ts",
                  "index": 36
                },
                "region": {
                  "startLine": 676,
                  "startColumn": 19,
                  "endLine": 676,
                  "endColumn": 22
                }
              }
            }
          ],
          "ruleId": "@typescript-eslint/no-explicit-any",
          "ruleIndex": 0,
          "suppressions": [
            {
              "kind": "inSource",
              "justification": ""
            }
          ]
        },
        {
          "level": "warning",
          "message": {
            "text": "Unexpected any. Specify a different type."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///home/runner/work/yaml-language-server/yaml-language-server/src/languageservice/services/yamlSchemaService.ts",
                  "index": 36
                },
                "region": {
                  "startLine": 721,
                  "startColumn": 44,
                  "endLine": 721,
                  "endColumn": 47
                }
              }
            }
          ],
          "ruleId": "@typescript-eslint/no-explicit-any",
          "ruleIndex": 0,
          "suppressions": [
            {
              "kind": "inSource",
              "justification": ""
            }
          ]
        },
        {
          "level": "warning",
          "message": {
            "text": "Unexpected any. Specify a different type."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///home/runner/work/yaml-language-server/yaml-language-server/src/languageservice/utils/arrUtils.ts",
                  "index": 39
                },
                "region": {
                  "startLine": 31,
                  "startColumn": 47,
                  "endLine": 31,
                  "endColumn": 50
                }
              }
            }
          ],
          "ruleId": "@typescript-eslint/no-explicit-any",
          "ruleIndex": 0,
          "suppressions": [
            {
              "kind": "inSource",
              "justification": ""
            }
          ]
        },
        {
          "level": "warning",
          "message": {
            "text": "Unexpected any. Specify a different type."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///home/runner/work/yaml-language-server/yaml-language-server/src/languageservice/utils/arrUtils.ts",
                  "index": 39
                },
                "region": {
                  "startLine": 31,
                  "startColumn": 55,
                  "endLine": 31,
                  "endColumn": 58
                }
              }
            }
          ],
          "ruleId": "@typescript-eslint/no-explicit-any",
          "ruleIndex": 0,
          "suppressions": [
            {
              "kind": "inSource",
              "justification": ""
            }
          ]
        },
        {
          "level": "warning",
          "message": {
            "text": "Unexpected any. Specify a different type."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///home/runner/work/yaml-language-server/yaml-language-server/src/languageservice/utils/objects.ts",
                  "index": 46
                },
                "region": {
                  "startLine": 8,
                  "startColumn": 29,
                  "endLine": 8,
                  "endColumn": 32
                }
              }
            }
          ],
          "ruleId": "@typescript-eslint/no-explicit-any",
          "ruleIndex": 0,
          "suppressions": [
            {
              "kind": "inSource",
              "justification": ""
            }
          ]
        },
        {
          "level": "warning",
          "message": {
            "text": "Unexpected any. Specify a different type."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///home/runner/work/yaml-language-server/yaml-language-server/src/languageservice/utils/objects.ts",
                  "index": 46
                },
                "region": {
                  "startLine": 8,
                  "startColumn": 41,
                  "endLine": 8,
                  "endColumn": 44
                }
              }
            }
          ],
          "ruleId": "@typescript-eslint/no-explicit-any",
          "ruleIndex": 0,
          "suppressions": [
            {
              "kind": "inSource",
              "justification": ""
            }
          ]
        },
        {
          "level": "error",
          "message": {
            "text": "ES2015 module syntax is preferred over custom TypeScript modules and namespaces."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///home/runner/work/yaml-language-server/yaml-language-server/src/requestTypes.ts",
                  "index": 55
                },
                "region": {
                  "startLine": 38,
                  "startColumn": 8,
                  "endLine": 43,
                  "endColumn": 2
                }
              }
            }
          ],
          "ruleId": "@typescript-eslint/no-namespace",
          "ruleIndex": 5,
          "suppressions": [
            {
              "kind": "inSource",
              "justification": ""
            }
          ]
        },
        {
          "level": "error",
          "message": {
            "text": "ES2015 module syntax is preferred over custom TypeScript modules and namespaces."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///home/runner/work/yaml-language-server/yaml-language-server/src/requestTypes.ts",
                  "index": 55
                },
                "region": {
                  "startLine": 45,
                  "startColumn": 8,
                  "endLine": 47,
                  "endColumn": 2
                }
              }
            }
          ],
          "ruleId": "@typescript-eslint/no-namespace",
          "ruleIndex": 5,
          "suppressions": [
            {
              "kind": "inSource",
              "justification": ""
            }
          ]
        },
        {
          "level": "error",
          "message": {
            "text": "Don't use `{}` as a type. `{}` actually means \"any non-nullish value\".\n- If you want a type meaning \"any object\", you probably want `Record<string, unknown>` instead.\n- If you want a type meaning \"any value\", you probably want `unknown` instead.\n- If you want a type meaning \"empty object\", you probably want `Record<string, never>` instead."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///home/runner/work/yaml-language-server/yaml-language-server/src/requestTypes.ts",
                  "index": 55
                },
                "region": {
                  "startLine": 46,
                  "startColumn": 39,
                  "endLine": 46,
                  "endColumn": 41
                }
              }
            }
          ],
          "ruleId": "@typescript-eslint/ban-types",
          "ruleIndex": 6,
          "suppressions": [
            {
              "kind": "inSource",
              "justification": ""
            }
          ]
        },
        {
          "level": "error",
          "message": {
            "text": "ES2015 module syntax is preferred over custom TypeScript modules and namespaces."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///home/runner/work/yaml-language-server/yaml-language-server/src/requestTypes.ts",
                  "index": 55
                },
                "region": {
                  "startLine": 49,
                  "startColumn": 8,
                  "endLine": 51,
                  "endColumn": 2
                }
              }
            }
          ],
          "ruleId": "@typescript-eslint/no-namespace",
          "ruleIndex": 5,
          "suppressions": [
            {
              "kind": "inSource",
              "justification": ""
            }
          ]
        },
        {
          "level": "error",
          "message": {
            "text": "Don't use `{}` as a type. `{}` actually means \"any non-nullish value\".\n- If you want a type meaning \"any object\", you probably want `Record<string, unknown>` instead.\n- If you want a type meaning \"any value\", you probably want `unknown` instead.\n- If you want a type meaning \"empty object\", you probably want `Record<string, never>` instead."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///home/runner/work/yaml-language-server/yaml-language-server/src/requestTypes.ts",
                  "index": 55
                },
                "region": {
                  "startLine": 50,
                  "startColumn": 39,
                  "endLine": 50,
                  "endColumn": 41
                }
              }
            }
          ],
          "ruleId": "@typescript-eslint/ban-types",
          "ruleIndex": 6,
          "suppressions": [
            {
              "kind": "inSource",
              "justification": ""
            }
          ]
        },
        {
          "level": "error",
          "message": {
            "text": "ES2015 module syntax is preferred over custom TypeScript modules and namespaces."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///home/runner/work/yaml-language-server/yaml-language-server/src/requestTypes.ts",
                  "index": 55
                },
                "region": {
                  "startLine": 53,
                  "startColumn": 8,
                  "endLine": 55,
                  "endColumn": 2
                }
              }
            }
          ],
          "ruleId": "@typescript-eslint/no-namespace",
          "ruleIndex": 5,
          "suppressions": [
            {
              "kind": "inSource",
              "justification": ""
            }
          ]
        },
        {
          "level": "error",
          "message": {
            "text": "ES2015 module syntax is preferred over custom TypeScript modules and namespaces."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///home/runner/work/yaml-language-server/yaml-language-server/src/requestTypes.ts",
                  "index": 55
                },
                "region": {
                  "startLine": 57,
                  "startColumn": 8,
                  "endLine": 59,
                  "endColumn": 2
                }
              }
            }
          ],
          "ruleId": "@typescript-eslint/no-namespace",
          "ruleIndex": 5,
          "suppressions": [
            {
              "kind": "inSource",
              "justification": ""
            }
          ]
        },
        {
          "level": "error",
          "message": {
            "text": "Don't use `{}` as a type. `{}` actually means \"any non-nullish value\".\n- If you want a type meaning \"any object\", you probably want `Record<string, unknown>` instead.\n- If you want a type meaning \"any value\", you probably want `unknown` instead.\n- If you want a type meaning \"empty object\", you probably want `Record<string, never>` instead."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///home/runner/work/yaml-language-server/yaml-language-server/src/requestTypes.ts",
                  "index": 55
                },
                "region": {
                  "startLine": 58,
                  "startColumn": 50,
                  "endLine": 58,
                  "endColumn": 52
                }
              }
            }
          ],
          "ruleId": "@typescript-eslint/ban-types",
          "ruleIndex": 6,
          "suppressions": [
            {
              "kind": "inSource",
              "justification": ""
            }
          ]
        },
        {
          "level": "error",
          "message": {
            "text": "ES2015 module syntax is preferred over custom TypeScript modules and namespaces."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///home/runner/work/yaml-language-server/yaml-language-server/src/requestTypes.ts",
                  "index": 55
                },
                "region": {
                  "startLine": 61,
                  "startColumn": 8,
                  "endLine": 63,
                  "endColumn": 2
                }
              }
            }
          ],
          "ruleId": "@typescript-eslint/no-namespace",
          "ruleIndex": 5,
          "suppressions": [
            {
              "kind": "inSource",
              "justification": ""
            }
          ]
        },
        {
          "level": "error",
          "message": {
            "text": "Don't use `{}` as a type. `{}` actually means \"any non-nullish value\".\n- If you want a type meaning \"any object\", you probably want `Record<string, unknown>` instead.\n- If you want a type meaning \"any value\", you probably want `unknown` instead.\n- If you want a type meaning \"empty object\", you probably want `Record<string, never>` instead."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///home/runner/work/yaml-language-server/yaml-language-server/src/requestTypes.ts",
                  "index": 55
                },
                "region": {
                  "startLine": 62,
                  "startColumn": 50,
                  "endLine": 62,
                  "endColumn": 52
                }
              }
            }
          ],
          "ruleId": "@typescript-eslint/ban-types",
          "ruleIndex": 6,
          "suppressions": [
            {
              "kind": "inSource",
              "justification": ""
            }
          ]
        },
        {
          "level": "error",
          "message": {
            "text": "ES2015 module syntax is preferred over custom TypeScript modules and namespaces."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///home/runner/work/yaml-language-server/yaml-language-server/src/requestTypes.ts",
                  "index": 55
                },
                "region": {
                  "startLine": 65,
                  "startColumn": 8,
                  "endLine": 67,
                  "endColumn": 2
                }
              }
            }
          ],
          "ruleId": "@typescript-eslint/no-namespace",
          "ruleIndex": 5,
          "suppressions": [
            {
              "kind": "inSource",
              "justification": ""
            }
          ]
        },
        {
          "level": "error",
          "message": {
            "text": "Don't use `{}` as a type. `{}` actually means \"any non-nullish value\".\n- If you want a type meaning \"any object\", you probably want `Record<string, unknown>` instead.\n- If you want a type meaning \"any value\", you probably want `unknown` instead.\n- If you want a type meaning \"empty object\", you probably want `Record<string, never>` instead."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///home/runner/work/yaml-language-server/yaml-language-server/src/requestTypes.ts",
                  "index": 55
                },
                "region": {
                  "startLine": 66,
                  "startColumn": 34,
                  "endLine": 66,
                  "endColumn": 36
                }
              }
            }
          ],
          "ruleId": "@typescript-eslint/ban-types",
          "ruleIndex": 6,
          "suppressions": [
            {
              "kind": "inSource",
              "justification": ""
            }
          ]
        },
        {
          "level": "error",
          "message": {
            "text": "Don't use `{}` as a type. `{}` actually means \"any non-nullish value\".\n- If you want a type meaning \"any object\", you probably want `Record<string, unknown>` instead.\n- If you want a type meaning \"any value\", you probably want `unknown` instead.\n- If you want a type meaning \"empty object\", you probably want `Record<string, never>` instead."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///home/runner/work/yaml-language-server/yaml-language-server/src/requestTypes.ts",
                  "index": 55
                },
                "region": {
                  "startLine": 66,
                  "startColumn": 38,
                  "endLine": 66,
                  "endColumn": 40
                }
              }
            }
          ],
          "ruleId": "@typescript-eslint/ban-types",
          "ruleIndex": 6,
          "suppressions": [
            {
              "kind": "inSource",
              "justification": ""
            }
          ]
        },
        {
          "level": "error",
          "message": {
            "text": "Don't use `{}` as a type. `{}` actually means \"any non-nullish value\".\n- If you want a type meaning \"any object\", you probably want `Record<string, unknown>` instead.\n- If you want a type meaning \"any value\", you probably want `unknown` instead.\n- If you want a type meaning \"empty object\", you probably want `Record<string, never>` instead."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///home/runner/work/yaml-language-server/yaml-language-server/src/requestTypes.ts",
                  "index": 55
                },
                "region": {
                  "startLine": 66,
                  "startColumn": 42,
                  "endLine": 66,
                  "endColumn": 44
                }
              }
            }
          ],
          "ruleId": "@typescript-eslint/ban-types",
          "ruleIndex": 6,
          "suppressions": [
            {
              "kind": "inSource",
              "justification": ""
            }
          ]
        },
        {
          "level": "error",
          "message": {
            "text": "ES2015 module syntax is preferred over custom TypeScript modules and namespaces."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///home/runner/work/yaml-language-server/yaml-language-server/src/requestTypes.ts",
                  "index": 55
                },
                "region": {
                  "startLine": 69,
                  "startColumn": 8,
                  "endLine": 71,
                  "endColumn": 2
                }
              }
            }
          ],
          "ruleId": "@typescript-eslint/no-namespace",
          "ruleIndex": 5,
          "suppressions": [
            {
              "kind": "inSource",
              "justification": ""
            }
          ]
        },
        {
          "level": "error",
          "message": {
            "text": "Don't use `{}` as a type. `{}` actually means \"any non-nullish value\".\n- If you want a type meaning \"any object\", you probably want `Record<string, unknown>` instead.\n- If you want a type meaning \"any value\", you probably want `unknown` instead.\n- If you want a type meaning \"empty object\", you probably want `Record<string, never>` instead."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///home/runner/work/yaml-language-server/yaml-language-server/src/requestTypes.ts",
                  "index": 55
                },
                "region": {
                  "startLine": 70,
                  "startColumn": 34,
                  "endLine": 70,
                  "endColumn": 36
                }
              }
            }
          ],
          "ruleId": "@typescript-eslint/ban-types",
          "ruleIndex": 6,
          "suppressions": [
            {
              "kind": "inSource",
              "justification": ""
            }
          ]
        },
        {
          "level": "error",
          "message": {
            "text": "Don't use `{}` as a type. `{}` actually means \"any non-nullish value\".\n- If you want a type meaning \"any object\", you probably want `Record<string, unknown>` instead.\n- If you want a type meaning \"any value\", you probably want `unknown` instead.\n- If you want a type meaning \"empty object\", you probably want `Record<string, never>` instead."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///home/runner/work/yaml-language-server/yaml-language-server/src/requestTypes.ts",
                  "index": 55
                },
                "region": {
                  "startLine": 70,
                  "startColumn": 38,
                  "endLine": 70,
                  "endColumn": 40
                }
              }
            }
          ],
          "ruleId": "@typescript-eslint/ban-types",
          "ruleIndex": 6,
          "suppressions": [
            {
              "kind": "inSource",
              "justification": ""
            }
          ]
        },
        {
          "level": "error",
          "message": {
            "text": "Don't use `{}` as a type. `{}` actually means \"any non-nullish value\".\n- If you want a type meaning \"any object\", you probably want `Record<string, unknown>` instead.\n- If you want a type meaning \"any value\", you probably want `unknown` instead.\n- If you want a type meaning \"empty object\", you probably want `Record<string, never>` instead."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///home/runner/work/yaml-language-server/yaml-language-server/src/requestTypes.ts",
                  "index": 55
                },
                "region": {
                  "startLine": 70,
                  "startColumn": 42,
                  "endLine": 70,
                  "endColumn": 44
                }
              }
            }
          ],
          "ruleId": "@typescript-eslint/ban-types",
          "ruleIndex": 6,
          "suppressions": [
            {
              "kind": "inSource",
              "justification": ""
            }
          ]
        },
        {
          "level": "error",
          "message": {
            "text": "ES2015 module syntax is preferred over custom TypeScript modules and namespaces."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///home/runner/work/yaml-language-server/yaml-language-server/src/requestTypes.ts",
                  "index": 55
                },
                "region": {
                  "startLine": 73,
                  "startColumn": 8,
                  "endLine": 75,
                  "endColumn": 2
                }
              }
            }
          ],
          "ruleId": "@typescript-eslint/no-namespace",
          "ruleIndex": 5,
          "suppressions": [
            {
              "kind": "inSource",
              "justification": ""
            }
          ]
        },
        {
          "level": "error",
          "message": {
            "text": "Don't use `{}` as a type. `{}` actually means \"any non-nullish value\".\n- If you want a type meaning \"any object\", you probably want `Record<string, unknown>` instead.\n- If you want a type meaning \"any value\", you probably want `unknown` instead.\n- If you want a type meaning \"empty object\", you probably want `Record<string, never>` instead."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///home/runner/work/yaml-language-server/yaml-language-server/src/requestTypes.ts",
                  "index": 55
                },
                "region": {
                  "startLine": 74,
                  "startColumn": 75,
                  "endLine": 74,
                  "endColumn": 77
                }
              }
            }
          ],
          "ruleId": "@typescript-eslint/ban-types",
          "ruleIndex": 6,
          "suppressions": [
            {
              "kind": "inSource",
              "justification": ""
            }
          ]
        },
        {
          "level": "error",
          "message": {
            "text": "ES2015 module syntax is preferred over custom TypeScript modules and namespaces."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///home/runner/work/yaml-language-server/yaml-language-server/src/requestTypes.ts",
                  "index": 55
                },
                "region": {
                  "startLine": 77,
                  "startColumn": 8,
                  "endLine": 82,
                  "endColumn": 2
                }
              }
            }
          ],
          "ruleId": "@typescript-eslint/no-namespace",
          "ruleIndex": 5,
          "suppressions": [
            {
              "kind": "inSource",
              "justification": ""
            }
          ]
        },
        {
          "level": "error",
          "message": {
            "text": "Don't use `{}` as a type. `{}` actually means \"any non-nullish value\".\n- If you want a type meaning \"any object\", you probably want `Record<string, unknown>` instead.\n- If you want a type meaning \"any value\", you probably want `unknown` instead.\n- If you want a type meaning \"empty object\", you probably want `Record<string, never>` instead."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///home/runner/work/yaml-language-server/yaml-language-server/src/requestTypes.ts",
                  "index": 55
                },
                "region": {
                  "startLine": 79,
                  "startColumn": 72,
                  "endLine": 79,
                  "endColumn": 74
                }
              }
            }
          ],
          "ruleId": "@typescript-eslint/ban-types",
          "ruleIndex": 6,
          "suppressions": [
            {
              "kind": "inSource",
              "justification": ""
            }
          ]
        },
        {
          "level": "error",
          "message": {
            "text": "Don't use `{}` as a type. `{}` actually means \"any non-nullish value\".\n- If you want a type meaning \"any object\", you probably want `Record<string, unknown>` instead.\n- If you want a type meaning \"any value\", you probably want `unknown` instead.\n- If you want a type meaning \"empty object\", you probably want `Record<string, never>` instead."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///home/runner/work/yaml-language-server/yaml-language-server/src/requestTypes.ts",
                  "index": 55
                },
                "region": {
                  "startLine": 80,
                  "startColumn": 79,
                  "endLine": 80,
                  "endColumn": 81
                }
              }
            }
          ],
          "ruleId": "@typescript-eslint/ban-types",
          "ruleIndex": 6,
          "suppressions": [
            {
              "kind": "inSource",
              "justification": ""
            }
          ]
        },
        {
          "level": "error",
          "message": {
            "text": "Don't use `{}` as a type. `{}` actually means \"any non-nullish value\".\n- If you want a type meaning \"any object\", you probably want `Record<string, unknown>` instead.\n- If you want a type meaning \"any value\", you probably want `unknown` instead.\n- If you want a type meaning \"empty object\", you probably want `Record<string, never>` instead."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///home/runner/work/yaml-language-server/yaml-language-server/src/requestTypes.ts",
                  "index": 55
                },
                "region": {
                  "startLine": 81,
                  "startColumn": 57,
                  "endLine": 81,
                  "endColumn": 59
                }
              }
            }
          ],
          "ruleId": "@typescript-eslint/ban-types",
          "ruleIndex": 6,
          "suppressions": [
            {
              "kind": "inSource",
              "justification": ""
            }
          ]
        },
        {
          "level": "warning",
          "message": {
            "text": "Unexpected any. Specify a different type."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///home/runner/work/yaml-language-server/yaml-language-server/src/server.ts",
                  "index": 56
                },
                "region": {
                  "startLine": 19,
                  "startColumn": 48,
                  "endLine": 19,
                  "endColumn": 51
                }
              }
            }
          ],
          "ruleId": "@typescript-eslint/no-explicit-any",
          "ruleIndex": 0,
          "suppressions": [
            {
              "kind": "inSource",
              "justification": ""
            }
          ]
        },
        {
          "level": "error",
          "message": {
            "text": "ES2015 module syntax is preferred over custom TypeScript modules and namespaces."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///home/runner/work/yaml-language-server/yaml-language-server/src/webworker/yamlServerMain.ts",
                  "index": 57
                },
                "region": {
                  "startLine": 14,
                  "startColumn": 1,
                  "endLine": 18,
                  "endColumn": 2
                }
              }
            }
          ],
          "ruleId": "@typescript-eslint/no-namespace",
          "ruleIndex": 5,
          "suppressions": [
            {
              "kind": "inSource",
              "justification": ""
            }
          ]
        },
        {
          "level": "error",
          "message": {
            "text": "Don't use `{}` as a type. `{}` actually means \"any non-nullish value\".\n- If you want a type meaning \"any object\", you probably want `Record<string, unknown>` instead.\n- If you want a type meaning \"any value\", you probably want `unknown` instead.\n- If you want a type meaning \"empty object\", you probably want `Record<string, never>` instead."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///home/runner/work/yaml-language-server/yaml-language-server/src/webworker/yamlServerMain.ts",
                  "index": 57
                },
                "region": {
                  "startLine": 17,
                  "startColumn": 50,
                  "endLine": 17,
                  "endColumn": 52
                }
              }
            }
          ],
          "ruleId": "@typescript-eslint/ban-types",
          "ruleIndex": 6,
          "suppressions": [
            {
              "kind": "inSource",
              "justification": ""
            }
          ]
        },
        {
          "level": "error",
          "message": {
            "text": "Require statement not part of import statement."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///home/runner/work/yaml-language-server/yaml-language-server/test/autoCompletion.test.ts",
                  "index": 62
                },
                "region": {
                  "startLine": 752,
                  "startColumn": 24,
                  "endLine": 752,
                  "endColumn": 95
                }
              }
            }
          ],
          "ruleId": "@typescript-eslint/no-var-requires",
          "ruleIndex": 3,
          "suppressions": [
            {
              "kind": "inSource",
              "justification": ""
            }
          ]
        },
        {
          "level": "error",
          "message": {
            "text": "Require statement not part of import statement."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///home/runner/work/yaml-language-server/yaml-language-server/test/autoCompletion.test.ts",
                  "index": 62
                },
                "region": {
                  "startLine": 770,
                  "startColumn": 24,
                  "endLine": 770,
                  "endColumn": 95
                }
              }
            }
          ],
          "ruleId": "@typescript-eslint/no-var-requires",
          "ruleIndex": 3,
          "suppressions": [
            {
              "kind": "inSource",
              "justification": ""
            }
          ]
        },
        {
          "level": "error",
          "message": {
            "text": "Require statement not part of import statement."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///home/runner/work/yaml-language-server/yaml-language-server/test/autoCompletion.test.ts",
                  "index": 62
                },
                "region": {
                  "startLine": 788,
                  "startColumn": 24,
                  "endLine": 788,
                  "endColumn": 95
                }
              }
            }
          ],
          "ruleId": "@typescript-eslint/no-var-requires",
          "ruleIndex": 3,
          "suppressions": [
            {
              "kind": "inSource",
              "justification": ""
            }
          ]
        },
        {
          "level": "error",
          "message": {
            "text": "Require statement not part of import statement."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///home/runner/work/yaml-language-server/yaml-language-server/test/autoCompletion.test.ts",
                  "index": 62
                },
                "region": {
                  "startLine": 818,
                  "startColumn": 24,
                  "endLine": 818,
                  "endColumn": 95
                }
              }
            }
          ],
          "ruleId": "@typescript-eslint/no-var-requires",
          "ruleIndex": 3,
          "suppressions": [
            {
              "kind": "inSource",
              "justification": ""
            }
          ]
        },
        {
          "level": "error",
          "message": {
            "text": "Require statement not part of import statement."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///home/runner/work/yaml-language-server/yaml-language-server/test/autoCompletion.test.ts",
                  "index": 62
                },
                "region": {
                  "startLine": 842,
                  "startColumn": 24,
                  "endLine": 842,
                  "endColumn": 95
                }
              }
            }
          ],
          "ruleId": "@typescript-eslint/no-var-requires",
          "ruleIndex": 3,
          "suppressions": [
            {
              "kind": "inSource",
              "justification": ""
            }
          ]
        },
        {
          "level": "error",
          "message": {
            "text": "Require statement not part of import statement."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///home/runner/work/yaml-language-server/yaml-language-server/test/autoCompletion.test.ts",
                  "index": 62
                },
                "region": {
                  "startLine": 866,
                  "startColumn": 24,
                  "endLine": 866,
                  "endColumn": 95
                }
              }
            }
          ],
          "ruleId": "@typescript-eslint/no-var-requires",
          "ruleIndex": 3,
          "suppressions": [
            {
              "kind": "inSource",
              "justification": ""
            }
          ]
        },
        {
          "level": "error",
          "message": {
            "text": "Require statement not part of import statement."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///home/runner/work/yaml-language-server/yaml-language-server/test/autoCompletion.test.ts",
                  "index": 62
                },
                "region": {
                  "startLine": 1007,
                  "startColumn": 24,
                  "endLine": 1007,
                  "endColumn": 88
                }
              }
            }
          ],
          "ruleId": "@typescript-eslint/no-var-requires",
          "ruleIndex": 3,
          "suppressions": [
            {
              "kind": "inSource",
              "justification": ""
            }
          ]
        },
        {
          "level": "error",
          "message": {
            "text": "Require statement not part of import statement."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///home/runner/work/yaml-language-server/yaml-language-server/test/autoCompletion.test.ts",
                  "index": 62
                },
                "region": {
                  "startLine": 1808,
                  "startColumn": 22,
                  "endLine": 1808,
                  "endColumn": 86
                }
              }
            }
          ],
          "ruleId": "@typescript-eslint/no-var-requires",
          "ruleIndex": 3,
          "suppressions": [
            {
              "kind": "inSource",
              "justification": ""
            }
          ]
        },
        {
          "level": "error",
          "message": {
            "text": "Require statement not part of import statement."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///home/runner/work/yaml-language-server/yaml-language-server/test/autoCompletion.test.ts",
                  "index": 62
                },
                "region": {
                  "startLine": 1826,
                  "startColumn": 22,
                  "endLine": 1826,
                  "endColumn": 86
                }
              }
            }
          ],
          "ruleId": "@typescript-eslint/no-var-requires",
          "ruleIndex": 3,
          "suppressions": [
            {
              "kind": "inSource",
              "justification": ""
            }
          ]
        },
        {
          "level": "error",
          "message": {
            "text": "Require statement not part of import statement."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///home/runner/work/yaml-language-server/yaml-language-server/test/autoCompletion.test.ts",
                  "index": 62
                },
                "region": {
                  "startLine": 1844,
                  "startColumn": 22,
                  "endLine": 1844,
                  "endColumn": 86
                }
              }
            }
          ],
          "ruleId": "@typescript-eslint/no-var-requires",
          "ruleIndex": 3,
          "suppressions": [
            {
              "kind": "inSource",
              "justification": ""
            }
          ]
        },
        {
          "level": "error",
          "message": {
            "text": "Require statement not part of import statement."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///home/runner/work/yaml-language-server/yaml-language-server/test/autoCompletion.test.ts",
                  "index": 62
                },
                "region": {
                  "startLine": 2567,
                  "startColumn": 22,
                  "endLine": 2567,
                  "endColumn": 96
                }
              }
            }
          ],
          "ruleId": "@typescript-eslint/no-var-requires",
          "ruleIndex": 3,
          "suppressions": [
            {
              "kind": "inSource",
              "justification": ""
            }
          ]
        },
        {
          "level": "error",
          "message": {
            "text": "Require statement not part of import statement."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///home/runner/work/yaml-language-server/yaml-language-server/test/autoCompletion.test.ts",
                  "index": 62
                },
                "region": {
                  "startLine": 2581,
                  "startColumn": 22,
                  "endLine": 2581,
                  "endColumn": 96
                }
              }
            }
          ],
          "ruleId": "@typescript-eslint/no-var-requires",
          "ruleIndex": 3,
          "suppressions": [
            {
              "kind": "inSource",
              "justification": ""
            }
          ]
        },
        {
          "level": "error",
          "message": {
            "text": "Require statement not part of import statement."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///home/runner/work/yaml-language-server/yaml-language-server/test/autoCompletion.test.ts",
                  "index": 62
                },
                "region": {
                  "startLine": 2594,
                  "startColumn": 22,
                  "endLine": 2594,
                  "endColumn": 96
                }
              }
            }
          ],
          "ruleId": "@typescript-eslint/no-var-requires",
          "ruleIndex": 3,
          "suppressions": [
            {
              "kind": "inSource",
              "justification": ""
            }
          ]
        },
        {
          "level": "error",
          "message": {
            "text": "Require statement not part of import statement."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///home/runner/work/yaml-language-server/yaml-language-server/test/autoCompletion.test.ts",
                  "index": 62
                },
                "region": {
                  "startLine": 2608,
                  "startColumn": 22,
                  "endLine": 2608,
                  "endColumn": 96
                }
              }
            }
          ],
          "ruleId": "@typescript-eslint/no-var-requires",
          "ruleIndex": 3,
          "suppressions": [
            {
              "kind": "inSource",
              "justification": ""
            }
          ]
        },
        {
          "level": "error",
          "message": {
            "text": "Require statement not part of import statement."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///home/runner/work/yaml-language-server/yaml-language-server/test/autoCompletion.test.ts",
                  "index": 62
                },
                "region": {
                  "startLine": 2624,
                  "startColumn": 22,
                  "endLine": 2624,
                  "endColumn": 96
                }
              }
            }
          ],
          "ruleId": "@typescript-eslint/no-var-requires",
          "ruleIndex": 3,
          "suppressions": [
            {
              "kind": "inSource",
              "justification": ""
            }
          ]
        },
        {
          "level": "error",
          "message": {
            "text": "Require statement not part of import statement."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///home/runner/work/yaml-language-server/yaml-language-server/test/autoCompletion.test.ts",
                  "index": 62
                },
                "region": {
                  "startLine": 2638,
                  "startColumn": 22,
                  "endLine": 2638,
                  "endColumn": 96
                }
              }
            }
          ],
          "ruleId": "@typescript-eslint/no-var-requires",
          "ruleIndex": 3,
          "suppressions": [
            {
              "kind": "inSource",
              "justification": ""
            }
          ]
        },
        {
          "level": "error",
          "message": {
            "text": "Require statement not part of import statement."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///home/runner/work/yaml-language-server/yaml-language-server/test/autoCompletion.test.ts",
                  "index": 62
                },
                "region": {
                  "startLine": 2651,
                  "startColumn": 22,
                  "endLine": 2651,
                  "endColumn": 96
                }
              }
            }
          ],
          "ruleId": "@typescript-eslint/no-var-requires",
          "ruleIndex": 3,
          "suppressions": [
            {
              "kind": "inSource",
              "justification": ""
            }
          ]
        },
        {
          "level": "error",
          "message": {
            "text": "Require statement not part of import statement."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///home/runner/work/yaml-language-server/yaml-language-server/test/autoCompletion.test.ts",
                  "index": 62
                },
                "region": {
                  "startLine": 2663,
                  "startColumn": 22,
                  "endLine": 2663,
                  "endColumn": 96
                }
              }
            }
          ],
          "ruleId": "@typescript-eslint/no-var-requires",
          "ruleIndex": 3,
          "suppressions": [
            {
              "kind": "inSource",
              "justification": ""
            }
          ]
        },
        {
          "level": "error",
          "message": {
            "text": "Require statement not part of import statement."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///home/runner/work/yaml-language-server/yaml-language-server/test/autoCompletion.test.ts",
                  "index": 62
                },
                "region": {
                  "startLine": 2675,
                  "startColumn": 22,
                  "endLine": 2675,
                  "endColumn": 96
                }
              }
            }
          ],
          "ruleId": "@typescript-eslint/no-var-requires",
          "ruleIndex": 3,
          "suppressions": [
            {
              "kind": "inSource",
              "justification": ""
            }
          ]
        },
        {
          "level": "error",
          "message": {
            "text": "Require statement not part of import statement."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///home/runner/work/yaml-language-server/yaml-language-server/test/autoCompletion.test.ts",
                  "index": 62
                },
                "region": {
                  "startLine": 2689,
                  "startColumn": 22,
                  "endLine": 2689,
                  "endColumn": 96
                }
              }
            }
          ],
          "ruleId": "@typescript-eslint/no-var-requires",
          "ruleIndex": 3,
          "suppressions": [
            {
              "kind": "inSource",
              "justification": ""
            }
          ]
        },
        {
          "level": "error",
          "message": {
            "text": "Require statement not part of import statement."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///home/runner/work/yaml-language-server/yaml-language-server/test/autoCompletionFix.test.ts",
                  "index": 63
                },
                "region": {
                  "startLine": 193,
                  "startColumn": 20,
                  "endLine": 193,
                  "endColumn": 93
                }
              }
            }
          ],
          "ruleId": "@typescript-eslint/no-var-requires",
          "ruleIndex": 3,
          "suppressions": [
            {
              "kind": "inSource",
              "justification": ""
            }
          ]
        },
        {
          "level": "error",
          "message": {
            "text": "Require statement not part of import statement."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///home/runner/work/yaml-language-server/yaml-language-server/test/autoCompletionFix.test.ts",
                  "index": 63
                },
                "region": {
                  "startLine": 208,
                  "startColumn": 20,
                  "endLine": 208,
                  "endColumn": 90
                }
              }
            }
          ],
          "ruleId": "@typescript-eslint/no-var-requires",
          "ruleIndex": 3,
          "suppressions": [
            {
              "kind": "inSource",
              "justification": ""
            }
          ]
        },
        {
          "level": "warning",
          "message": {
            "text": "Unexpected any. Specify a different type."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///home/runner/work/yaml-language-server/yaml-language-server/test/formatter.test.ts",
                  "index": 71
                },
                "region": {
                  "startLine": 27,
                  "startColumn": 53,
                  "endLine": 27,
                  "endColumn": 56
                }
              }
            }
          ],
          "ruleId": "@typescript-eslint/no-explicit-any",
          "ruleIndex": 0,
          "suppressions": [
            {
              "kind": "inSource",
              "justification": ""
            }
          ]
        },
        {
          "level": "error",
          "message": {
            "text": "Require statement not part of import statement."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///home/runner/work/yaml-language-server/yaml-language-server/test/schema.test.ts",
                  "index": 78
                },
                "region": {
                  "startLine": 587,
                  "startColumn": 37,
                  "endLine": 587,
                  "endColumn": 104
                }
              }
            }
          ],
          "ruleId": "@typescript-eslint/no-var-requires",
          "ruleIndex": 3,
          "suppressions": [
            {
              "kind": "inSource",
              "justification": ""
            }
          ]
        },
        {
          "level": "error",
          "message": {
            "text": "Require statement not part of import statement."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///home/runner/work/yaml-language-server/yaml-language-server/test/schema.test.ts",
                  "index": 78
                },
                "region": {
                  "startLine": 589,
                  "startColumn": 31,
                  "endLine": 589,
                  "endColumn": 98
                }
              }
            }
          ],
          "ruleId": "@typescript-eslint/no-var-requires",
          "ruleIndex": 3,
          "suppressions": [
            {
              "kind": "inSource",
              "justification": ""
            }
          ]
        },
        {
          "level": "error",
          "message": {
            "text": "Require statement not part of import statement."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///home/runner/work/yaml-language-server/yaml-language-server/test/schema.test.ts",
                  "index": 78
                },
                "region": {
                  "startLine": 591,
                  "startColumn": 34,
                  "endLine": 591,
                  "endColumn": 98
                }
              }
            }
          ],
          "ruleId": "@typescript-eslint/no-var-requires",
          "ruleIndex": 3,
          "suppressions": [
            {
              "kind": "inSource",
              "justification": ""
            }
          ]
        },
        {
          "level": "error",
          "message": {
            "text": "Require statement not part of import statement."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///home/runner/work/yaml-language-server/yaml-language-server/test/schema.test.ts",
                  "index": 78
                },
                "region": {
                  "startLine": 595,
                  "startColumn": 40,
                  "endLine": 595,
                  "endColumn": 118
                }
              }
            }
          ],
          "ruleId": "@typescript-eslint/no-var-requires",
          "ruleIndex": 3,
          "suppressions": [
            {
              "kind": "inSource",
              "justification": ""
            }
          ]
        },
        {
          "level": "error",
          "message": {
            "text": "Require statement not part of import statement."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///home/runner/work/yaml-language-server/yaml-language-server/test/schemaValidation.test.ts",
                  "index": 81
                },
                "region": {
                  "startLine": 1485,
                  "startColumn": 22,
                  "endLine": 1485,
                  "endColumn": 96
                }
              }
            }
          ],
          "ruleId": "@typescript-eslint/no-var-requires",
          "ruleIndex": 3,
          "suppressions": [
            {
              "kind": "inSource",
              "justification": ""
            }
          ]
        },
        {
          "level": "error",
          "message": {
            "text": "Require statement not part of import statement."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///home/runner/work/yaml-language-server/yaml-language-server/test/schemaValidation.test.ts",
                  "index": 81
                },
                "region": {
                  "startLine": 1502,
                  "startColumn": 22,
                  "endLine": 1502,
                  "endColumn": 96
                }
              }
            }
          ],
          "ruleId": "@typescript-eslint/no-var-requires",
          "ruleIndex": 3,
          "suppressions": [
            {
              "kind": "inSource",
              "justification": ""
            }
          ]
        },
        {
          "level": "error",
          "message": {
            "text": "Require statement not part of import statement."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///home/runner/work/yaml-language-server/yaml-language-server/test/schemaValidation.test.ts",
                  "index": 81
                },
                "region": {
                  "startLine": 1515,
                  "startColumn": 22,
                  "endLine": 1515,
                  "endColumn": 96
                }
              }
            }
          ],
          "ruleId": "@typescript-eslint/no-var-requires",
          "ruleIndex": 3,
          "suppressions": [
            {
              "kind": "inSource",
              "justification": ""
            }
          ]
        },
        {
          "level": "error",
          "message": {
            "text": "Require statement not part of import statement."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///home/runner/work/yaml-language-server/yaml-language-server/test/schemaValidation.test.ts",
                  "index": 81
                },
                "region": {
                  "startLine": 1528,
                  "startColumn": 22,
                  "endLine": 1528,
                  "endColumn": 96
                }
              }
            }
          ],
          "ruleId": "@typescript-eslint/no-var-requires",
          "ruleIndex": 3,
          "suppressions": [
            {
              "kind": "inSource",
              "justification": ""
            }
          ]
        },
        {
          "level": "warning",
          "message": {
            "text": "'paramOrEdit' is defined but never used."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///home/runner/work/yaml-language-server/yaml-language-server/test/utils/testsTypes.ts",
                  "index": 89
                },
                "region": {
                  "startLine": 27,
                  "startColumn": 13,
                  "endLine": 27,
                  "endColumn": 66
                }
              }
            }
          ],
          "ruleId": "@typescript-eslint/no-unused-vars",
          "ruleIndex": 1,
          "suppressions": [
            {
              "kind": "inSource",
              "justification": ""
            }
          ]
        },
        {
          "level": "warning",
          "message": {
            "text": "Unexpected any. Specify a different type."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///home/runner/work/yaml-language-server/yaml-language-server/test/utils/testsTypes.ts",
                  "index": 89
                },
                "region": {
                  "startLine": 30,
                  "startColumn": 31,
                  "endLine": 30,
                  "endColumn": 34
                }
              }
            }
          ],
          "ruleId": "@typescript-eslint/no-explicit-any",
          "ruleIndex": 0,
          "suppressions": [
            {
              "kind": "inSource",
              "justification": ""
            }
          ]
        },
        {
          "level": "warning",
          "message": {
            "text": "Unexpected any. Specify a different type."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///home/runner/work/yaml-language-server/yaml-language-server/test/utils/testsTypes.ts",
                  "index": 89
                },
                "region": {
                  "startLine": 31,
                  "startColumn": 46,
                  "endLine": 31,
                  "endColumn": 49
                }
              }
            }
          ],
          "ruleId": "@typescript-eslint/no-explicit-any",
          "ruleIndex": 0,
          "suppressions": [
            {
              "kind": "inSource",
              "justification": ""
            }
          ]
        },
        {
          "level": "warning",
          "message": {
            "text": "Unexpected any. Specify a different type."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///home/runner/work/yaml-language-server/yaml-language-server/test/utils/testsTypes.ts",
                  "index": 89
                },
                "region": {
                  "startLine": 32,
                  "startColumn": 54,
                  "endLine": 32,
                  "endColumn": 57
                }
              }
            }
          ],
          "ruleId": "@typescript-eslint/no-explicit-any",
          "ruleIndex": 0,
          "suppressions": [
            {
              "kind": "inSource",
              "justification": ""
            }
          ]
        },
        {
          "level": "warning",
          "message": {
            "text": "Unexpected any. Specify a different type."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///home/runner/work/yaml-language-server/yaml-language-server/test/utils/testsTypes.ts",
                  "index": 89
                },
                "region": {
                  "startLine": 33,
                  "startColumn": 57,
                  "endLine": 33,
                  "endColumn": 60
                }
              }
            }
          ],
          "ruleId": "@typescript-eslint/no-explicit-any",
          "ruleIndex": 0,
          "suppressions": [
            {
              "kind": "inSource",
              "justification": ""
            }
          ]
        },
        {
          "level": "warning",
          "message": {
            "text": "'items' is defined but never used."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///home/runner/work/yaml-language-server/yaml-language-server/test/utils/testsTypes.ts",
                  "index": 89
                },
                "region": {
                  "startLine": 34,
                  "startColumn": 20,
                  "endLine": 34,
                  "endColumn": 31
                }
              }
            }
          ],
          "ruleId": "@typescript-eslint/no-unused-vars",
          "ruleIndex": 1,
          "suppressions": [
            {
              "kind": "inSource",
              "justification": ""
            }
          ]
        },
        {
          "level": "warning",
          "message": {
            "text": "Unexpected any. Specify a different type."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///home/runner/work/yaml-language-server/yaml-language-server/test/utils/testsTypes.ts",
                  "index": 89
                },
                "region": {
                  "startLine": 34,
                  "startColumn": 28,
                  "endLine": 34,
                  "endColumn": 31
                }
              }
            }
          ],
          "ruleId": "@typescript-eslint/no-explicit-any",
          "ruleIndex": 0,
          "suppressions": [
            {
              "kind": "inSource",
              "justification": ""
            }
          ]
        },
        {
          "level": "warning",
          "message": {
            "text": "Unexpected any. Specify a different type."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///home/runner/work/yaml-language-server/yaml-language-server/test/utils/testsTypes.ts",
                  "index": 89
                },
                "region": {
                  "startLine": 34,
                  "startColumn": 42,
                  "endLine": 34,
                  "endColumn": 45
                }
              }
            }
          ],
          "ruleId": "@typescript-eslint/no-explicit-any",
          "ruleIndex": 0,
          "suppressions": [
            {
              "kind": "inSource",
              "justification": ""
            }
          ]
        },
        {
          "level": "warning",
          "message": {
            "text": "Unexpected any. Specify a different type."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///home/runner/work/yaml-language-server/yaml-language-server/test/utils/testsTypes.ts",
                  "index": 89
                },
                "region": {
                  "startLine": 34,
                  "startColumn": 48,
                  "endLine": 34,
                  "endColumn": 51
                }
              }
            }
          ],
          "ruleId": "@typescript-eslint/no-explicit-any",
          "ruleIndex": 0,
          "suppressions": [
            {
              "kind": "inSource",
              "justification": ""
            }
          ]
        },
        {
          "level": "warning",
          "message": {
            "text": "'handler' is defined but never used."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///home/runner/work/yaml-language-server/yaml-language-server/test/utils/testsTypes.ts",
                  "index": 89
                },
                "region": {
                  "startLine": 41,
                  "startColumn": 20,
                  "endLine": 41,
                  "endColumn": 67
                }
              }
            }
          ],
          "ruleId": "@typescript-eslint/no-unused-vars",
          "ruleIndex": 1,
          "suppressions": [
            {
              "kind": "inSource",
              "justification": ""
            }
          ]
        },
        {
          "level": "warning",
          "message": {
            "text": "'handler' is defined but never used."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///home/runner/work/yaml-language-server/yaml-language-server/test/utils/testsTypes.ts",
                  "index": 89
                },
                "region": {
                  "startLine": 44,
                  "startColumn": 20,
                  "endLine": 44,
                  "endColumn": 67
                }
              }
            }
          ],
          "ruleId": "@typescript-eslint/no-unused-vars",
          "ruleIndex": 1,
          "suppressions": [
            {
              "kind": "inSource",
              "justification": ""
            }
          ]
        },
        {
          "level": "warning",
          "message": {
            "text": "'handler' is defined but never used."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///home/runner/work/yaml-language-server/yaml-language-server/test/utils/testsTypes.ts",
                  "index": 89
                },
                "region": {
                  "startLine": 47,
                  "startColumn": 20,
                  "endLine": 47,
                  "endColumn": 67
                }
              }
            }
          ],
          "ruleId": "@typescript-eslint/no-unused-vars",
          "ruleIndex": 1,
          "suppressions": [
            {
              "kind": "inSource",
              "justification": ""
            }
          ]
        },
        {
          "level": "warning",
          "message": {
            "text": "'handler' is defined but never used."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///home/runner/work/yaml-language-server/yaml-language-server/test/utils/testsTypes.ts",
                  "index": 89
                },
                "region": {
                  "startLine": 50,
                  "startColumn": 21,
                  "endLine": 50,
                  "endColumn": 85
                }
              }
            }
          ],
          "ruleId": "@typescript-eslint/no-unused-vars",
          "ruleIndex": 1,
          "suppressions": [
            {
              "kind": "inSource",
              "justification": ""
            }
          ]
        },
        {
          "level": "warning",
          "message": {
            "text": "'handler' is defined but never used."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///home/runner/work/yaml-language-server/yaml-language-server/test/utils/testsTypes.ts",
                  "index": 89
                },
                "region": {
                  "startLine": 53,
                  "startColumn": 21,
                  "endLine": 53,
                  "endColumn": 85
                }
              }
            }
          ],
          "ruleId": "@typescript-eslint/no-unused-vars",
          "ruleIndex": 1,
          "suppressions": [
            {
              "kind": "inSource",
              "justification": ""
            }
          ]
        },
        {
          "level": "warning",
          "message": {
            "text": "'handler' is defined but never used."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///home/runner/work/yaml-language-server/yaml-language-server/test/utils/testsTypes.ts",
                  "index": 89
                },
                "region": {
                  "startLine": 56,
                  "startColumn": 21,
                  "endLine": 56,
                  "endColumn": 85
                }
              }
            }
          ],
          "ruleId": "@typescript-eslint/no-unused-vars",
          "ruleIndex": 1,
          "suppressions": [
            {
              "kind": "inSource",
              "justification": ""
            }
          ]
        }
      ]
    }
  ]
}